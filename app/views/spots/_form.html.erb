<style>
  #newSpotMap{
    width: 100%;
    height: 400px;
  }
</style>

<script>
function initMap() {
  if( navigator.geolocation ){
    navigator.geolocation.getCurrentPosition( success, error, option );
    function success(position){
      var data = position.coords;
      var lat = data.latitude;
      var lng = data.longitude;
      
      var map;
      var marker = [];
      var infoWindow = [];
      var center = {
        lat: lat,
        lng: lng
      };

      document.getElementById('spot_latitude').value = lat;
      document.getElementById('spot_longitude').value = lng;
      
      map = new google.maps.Map(document.getElementById('newSpotMap'), {
        center: center, // 地図の中心を指定
        zoom: 14, // 地図のズームを指定
        gestureHandling: "cooperative"
      });
      
      //現在位置の処理
      markerCurrentLatLng = new google.maps.LatLng({lat: Number(lat), lng: Number(lng)});
      makerCurrent = new google.maps.Marker({
        position: markerCurrentLatLng,
        map: map
      });
      makerCurrent.setOptions({
        icon: {
          url: "<%= asset_url 'focus.png' %>"
        }
      });
      
      // マップをクリックした際
      map.addListener('click', function(e) {
        getClickLatLng(e.latLng, map);
      });
      function getClickLatLng(lat_lng, map) {
        document.getElementById('spot_latitude').value=lat_lng.lat();
        document.getElementById('spot_longitude').value=lat_lng.lng();
        
        makerCurrent.setMap(null);
        makerCurrent = new google.maps.Marker({
          position: lat_lng,
          map: map
        });
        makerCurrent.setOptions({
          icon: {
            url: "<%= asset_url 'focus.png' %>"
          }
        });
        map.panTo(lat_lng);
        
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode({
          latLng: lat_lng
        },function(results, status) {
          if (results[0].geometry) {
            // 住所を取得(日本の場合だけ「日本, 」を削除)
            var address = results[0].formatted_address.replace(/^日本, /, '');
            var postalCode = '';
            if ( address.match(/\d{3}-\d{4}/g)) {
              postalCode = String(address.match(/\d{3}-\d{4}/g));
              console.log(postalCode);
            }
            console.log(address);
          }
        });
        
      }

    }//success
    function error(error){
      var errorMessage = {
        0: "原因不明のエラーが発生しました。",
        1: "位置情報が許可されませんでした。",
        2: "位置情報が取得できませんでした。",
        3: "タイムアウトしました。",
      } ;
      alert( errorMessage[error.code]);
    }//error
    var option = {
      "enableHighAccuracy": false,
      "timeout": 1000 ,
      "maximumAge": 100 ,
    };
  
  }else{
    alert("あなたの端末では、現在位置を取得できません。");
  }
  
}


</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=<%= ENV['GEOCODING_API_KEY'] %>&callback=initMap"></script>

<div id="newSpotMap"></div>

<%= form_for(@spot) do |f| %>
  <%= render 'shared/error_messages', object: f.object %>
  
  <div class="form-group">
    <%= f.label :latitude, '緯度' %>
    <%= f.text_field :latitude, class: 'form-control' %>
  </div>
  
  <div class="form-group">
    <%= f.label :longitude, '経度' %>
    <%= f.text_field :longitude, class: 'form-control' %>
  </div>

  <div class="form-group">
    <%= f.label :name, '名称' %>
    <%= f.text_field :name, class: 'form-control' %>
  </div>
  
  <div class="form-group">
    <%= f.label :kana, 'よみがな' %>
    <%= f.text_field :kana, class: 'form-control' %>
  </div>
  
  <div class="form-group">
    <%= f.label :address, '住所' %>
    <%= f.text_field :address, class: 'form-control' %>
  </div>
  
  <div class="form-group">
    <%= f.label :pref, '都道府県' %>
    <%= f.collection_select :pref, JpPrefecture::Prefecture.all, :name_e, :name, {prompt: '未選択'}, {class: 'form-control'} %>
  </div>
  
  <div class="form-group">
    <%= f.label :access, 'アクセス方法' %>
    <%= f.text_field :access, class: 'form-control' %>
  </div>
  
  <div class="form-group">
    <%= f.label :phone, '電話番号' %>
    <%= f.text_field :phone, class: 'form-control' %>
  </div>

  <div class="form-group">
    <%= f.label :category_ids, 'カテゴリー', class: 'cat-label' %>
    <%= f.collection_check_boxes(:category_ids, Category.all, :id, :name) do |b| %>
      <div class="form-check form-check-inline">
        <%= b.label { b.check_box + b.text } %>
      </div>
    <% end %>
  </div>
  
  <%= f.submit '登録する', class: 'btn btn-primary btn-block' %>
  
<% end %>